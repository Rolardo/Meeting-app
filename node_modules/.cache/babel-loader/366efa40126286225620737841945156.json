{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gocac\\\\OneDrive\\\\Desktop\\\\Roli\\\\React projects\\\\Meeting project\\\\src\\\\store\\\\favorite-context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoritesContext = /*#__PURE__*/createContext({\n  favorites: [],\n  totalFavorites: 0,\n  addFavorite: favoriteMeetup => {},\n  removeFavorite: meetupId => {},\n  itemIsFavorite: meetupId => {}\n});\nexport function FavoritesContextProvider(props) {\n  _s();\n\n  const [userFavorites, setUserFavorites] = useState([]);\n\n  function addFavoriteHandler(favoriteMeetup) {\n    //Best way of updating the latest state, when you depend on the previous version of the state to update\n    setUserFavorites(prevUserFavorites => {\n      return prevUserFavorites.concat(favoriteMeetup);\n    });\n  }\n\n  function hideMeetHandler(meetupId) {\n    setUserFavorites(prevUserMeetups => {\n      return prevUserMeetups.filter(meetup => meetup.id !== meetupId);\n    });\n  }\n\n  function removeFavoriteHandler(meetupId) {\n    //Use to filter (return a new array) where we check if the meetup.id is the same as the one we want to take, if so, it takes this item that matches from the new array\n    setUserFavorites(prevUserFavorites => {\n      return prevUserFavorites.filter(meetup => meetup.id !== meetupId);\n    });\n  }\n\n  function itemIsFavoriteHandler(meetupId) {\n    return userFavorites.some(meetup => meetup.id === meetupId);\n  }\n\n  const context = {\n    favorites: userFavorites,\n    totalFavorites: userFavorites.length,\n    addFavorite: addFavoriteHandler,\n    removeFavorite: removeFavoriteHandler,\n    itemIsFavorite: itemIsFavoriteHandler,\n    hideMeetup: hideMeetHandler\n  };\n  return /*#__PURE__*/_jsxDEV(FavoritesContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FavoritesContextProvider, \"UlopS2AxBLjN23/y+OKS+T5dH2M=\");\n\n_c = FavoritesContextProvider;\nexport default FavoritesContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoritesContextProvider\");","map":{"version":3,"names":["createContext","useState","FavoritesContext","favorites","totalFavorites","addFavorite","favoriteMeetup","removeFavorite","meetupId","itemIsFavorite","FavoritesContextProvider","props","userFavorites","setUserFavorites","addFavoriteHandler","prevUserFavorites","concat","hideMeetHandler","prevUserMeetups","filter","meetup","id","removeFavoriteHandler","itemIsFavoriteHandler","some","context","length","hideMeetup","children"],"sources":["C:/Users/gocac/OneDrive/Desktop/Roli/React projects/Meeting project/src/store/favorite-context.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nconst FavoritesContext = createContext({\r\n  favorites: [],\r\n  totalFavorites: 0,\r\n  addFavorite: (favoriteMeetup) => {},\r\n  removeFavorite: (meetupId) => {},\r\n  itemIsFavorite: (meetupId) => {},\r\n});\r\n\r\nexport function FavoritesContextProvider(props) {\r\n  const [userFavorites, setUserFavorites] = useState([]);\r\n\r\n  function addFavoriteHandler(favoriteMeetup) {\r\n    //Best way of updating the latest state, when you depend on the previous version of the state to update\r\n    setUserFavorites((prevUserFavorites) => {\r\n      return prevUserFavorites.concat(favoriteMeetup);\r\n    });\r\n  }\r\n\r\n  function hideMeetHandler(meetupId) {\r\n    setUserFavorites((prevUserMeetups) => {\r\n      return prevUserMeetups.filter((meetup) => meetup.id !== meetupId);\r\n    });\r\n  }\r\n\r\n  function removeFavoriteHandler(meetupId) {\r\n    //Use to filter (return a new array) where we check if the meetup.id is the same as the one we want to take, if so, it takes this item that matches from the new array\r\n    setUserFavorites((prevUserFavorites) => {\r\n      return prevUserFavorites.filter((meetup) => meetup.id !== meetupId);\r\n    });\r\n  }\r\n\r\n  function itemIsFavoriteHandler(meetupId) {\r\n    return userFavorites.some((meetup) => meetup.id === meetupId);\r\n  }\r\n\r\n  const context = {\r\n    favorites: userFavorites,\r\n    totalFavorites: userFavorites.length,\r\n    addFavorite: addFavoriteHandler,\r\n    removeFavorite: removeFavoriteHandler,\r\n    itemIsFavorite: itemIsFavoriteHandler,\r\n    hideMeetup: hideMeetHandler,\r\n  };\r\n\r\n  return (\r\n    <FavoritesContext.Provider value={context}>\r\n      {props.children}\r\n    </FavoritesContext.Provider>\r\n  );\r\n}\r\n\r\nexport default FavoritesContext;\r\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,MAAMC,gBAAgB,gBAAGF,aAAa,CAAC;EACrCG,SAAS,EAAE,EAD0B;EAErCC,cAAc,EAAE,CAFqB;EAGrCC,WAAW,EAAGC,cAAD,IAAoB,CAAE,CAHE;EAIrCC,cAAc,EAAGC,QAAD,IAAc,CAAE,CAJK;EAKrCC,cAAc,EAAGD,QAAD,IAAc,CAAE;AALK,CAAD,CAAtC;AAQA,OAAO,SAASE,wBAAT,CAAkCC,KAAlC,EAAyC;EAAA;;EAC9C,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;;EAEA,SAASa,kBAAT,CAA4BR,cAA5B,EAA4C;IAC1C;IACAO,gBAAgB,CAAEE,iBAAD,IAAuB;MACtC,OAAOA,iBAAiB,CAACC,MAAlB,CAAyBV,cAAzB,CAAP;IACD,CAFe,CAAhB;EAGD;;EAED,SAASW,eAAT,CAAyBT,QAAzB,EAAmC;IACjCK,gBAAgB,CAAEK,eAAD,IAAqB;MACpC,OAAOA,eAAe,CAACC,MAAhB,CAAwBC,MAAD,IAAYA,MAAM,CAACC,EAAP,KAAcb,QAAjD,CAAP;IACD,CAFe,CAAhB;EAGD;;EAED,SAASc,qBAAT,CAA+Bd,QAA/B,EAAyC;IACvC;IACAK,gBAAgB,CAAEE,iBAAD,IAAuB;MACtC,OAAOA,iBAAiB,CAACI,MAAlB,CAA0BC,MAAD,IAAYA,MAAM,CAACC,EAAP,KAAcb,QAAnD,CAAP;IACD,CAFe,CAAhB;EAGD;;EAED,SAASe,qBAAT,CAA+Bf,QAA/B,EAAyC;IACvC,OAAOI,aAAa,CAACY,IAAd,CAAoBJ,MAAD,IAAYA,MAAM,CAACC,EAAP,KAAcb,QAA7C,CAAP;EACD;;EAED,MAAMiB,OAAO,GAAG;IACdtB,SAAS,EAAES,aADG;IAEdR,cAAc,EAAEQ,aAAa,CAACc,MAFhB;IAGdrB,WAAW,EAAES,kBAHC;IAIdP,cAAc,EAAEe,qBAJF;IAKdb,cAAc,EAAEc,qBALF;IAMdI,UAAU,EAAEV;EANE,CAAhB;EASA,oBACE,QAAC,gBAAD,CAAkB,QAAlB;IAA2B,KAAK,EAAEQ,OAAlC;IAAA,UACGd,KAAK,CAACiB;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAzCelB,wB;;KAAAA,wB;AA2ChB,eAAeR,gBAAf"},"metadata":{},"sourceType":"module"}